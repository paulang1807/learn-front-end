# Based on the Docker Mastery Course by Bret Fisher
version: '3.1'  # if no version is specified then v1 is assumed. Recommend v2 minimum

services:  # containers. same as docker run
  servicename: # a friendly name. this is also DNS name inside network
    build: # Optional if you want to build the image
      context: # Optional use with build to specify the location where the dockerfile exists
      dockerfile: # Optional name of dockerfile to use for build. This tag is not needed if the standard dockerfile name 'Dockerfile' is used.
    image: # Optional if you use build. If using build, this can be used to specify the image name. The process will first look for the image with that name in the local cache and then build if using the dockerfile specified above if the image is not found.
    network_mode: # Optional, same as --net in docker run
    depends_on: # Optional, specify the services in the docker compose that this service depends on
      - list
    stdin_open: # Optional, same as -i in docker run
    tty: # Optional, same as -t in docker run
    environment: # Optional, same as -e in docker run; specify key value pairs
      Key: value
    volumes: # Optional, same as -v in docker run; can specify options such as read-only (see example below)
      - list
    ports: #Optional, same as -p in docker run
      - list
    expose: #Optional, same as expose in dockerfile
      - list
    command:  # Optional, replace the default CMD specified by the image
    healthcheck: # Optional
      test: # command for testing
      interval:
      timeout:
      retries:
      start_period: # requires v3.4
  web:  # container example 1
    build:
      context: .   # build in the current directory
      dockerfile: test.Dockerfile
    image: test-image
    volumes:
      - vol1:/usr/v1   # volumes created in the volumes section below
      - vol2:/usr/v2
  web2:  # container example with standard dockerfile build
    build: .
    image: test-image
    healthcheck: # Optional
      test: ["CMD","curl", "-f", "http://localhost/health"]
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 10s
  zookeeper:  # container example 2
    image: confluentinc/cp-zookeeper:latest
    network_mode: host
    depends_on:
      - servicename
    stdin_open: true
    tty: true
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
    volumes:
      - ~/share:/usr/share:ro
    ports:
      - "8888:8888"  
    expose:
      - "6379"  
    command:  jupyter notebook --no-browser --port 8888 --ip 0.0.0.0 --allow-root
  

volumes: # Optional, same as docker volume create
  vol1:
  vol2:

networks: # Optional, same as docker network create
  network1:
  network2:



